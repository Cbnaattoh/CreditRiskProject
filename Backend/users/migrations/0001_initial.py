# Generated by Django 4.2.7 on 2025-05-22 01:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models.user
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('company', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=users.models.user.profile_picture_upload_path)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('theme_preference', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('system', 'System Default')], default='light', max_length=10)),
                ('is_2fa_enabled', models.BooleanField(default=False)),
                ('last_password_change', models.DateTimeField(auto_now_add=True)),
                ('security_question', models.CharField(blank=True, max_length=200)),
                ('security_answer', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('login_attempts', models.PositiveIntegerField(default=0)),
                ('user_type', models.CharField(choices=[('ADMIN', 'Administrator'), ('USER', 'Standard User'), ('ANALYST', 'Risk Analyst'), ('AUDITOR', 'Compliance Auditor')], default='USER', max_length=10)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('risk_category', models.CharField(blank=True, max_length=50)),
                ('social_auth_provider', models.CharField(blank=True, max_length=50)),
                ('social_auth_uid', models.CharField(blank=True, max_length=255)),
                ('signup_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('data_processing_consent', models.BooleanField(default=False)),
                ('marketing_consent', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='SecurityQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='The security question text', max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this question is available for selection')),
            ],
            options={
                'verbose_name': 'Security Question',
                'verbose_name_plural': 'Security Questions',
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='UserRiskProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_score', models.IntegerField(blank=True, null=True)),
                ('debt_to_income_ratio', models.FloatField(blank=True, null=True)),
                ('employment_status', models.CharField(blank=True, choices=[('EMPLOYED', 'Employed'), ('SELF_EMPLOYED', 'Self-Employed'), ('UNEMPLOYED', 'Unemployed'), ('RETIRED', 'Retired'), ('STUDENT', 'Student')], max_length=20)),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('payment_history', models.JSONField(blank=True, default=list, help_text='Historical payment data in JSON format')),
                ('risk_factors', models.JSONField(blank=True, default=list, help_text='Identified risk factors in JSON format')),
                ('last_assessment_date', models.DateTimeField(blank=True, null=True)),
                ('next_assessment_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Risk Profile',
                'verbose_name_plural': 'User Risk Profiles',
                'ordering': ['-last_assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'session_key')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('LOGIN_ATTEMPT', 'Login Attempt'), ('LOGIN_SUCCESS', 'Login Success'), ('LOGIN_FAILED', 'Login Failed'), ('PASSWORD_CHANGE', 'Password Change'), ('PROFILE_UPDATE', 'Profile Update'), ('ACCOUNT_CREATED', 'Account Created'), ('2FA_ENABLED', '2FA Enabled'), ('2FA_DISABLED', '2FA Disabled'), ('RISK_ASSESSMENT', 'Risk Assessment'), ('CREDIT_CHECK', 'Credit Check'), ('LOGOUT', 'Logout')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'activity_type'], name='users_usera_user_id_421934_idx'), models.Index(fields=['timestamp'], name='users_usera_timesta_6dbdeb_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('SYSTEM', 'System Notification'), ('SECURITY', 'Security Alert'), ('RISK', 'Risk Alert'), ('PAYMENT', 'Payment Notification'), ('GENERAL', 'General Message')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='users_notif_user_id_1be17e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_user_email_6f2530_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='users_user_user_ty_4573bb_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['risk_score'], name='users_user_risk_sc_38a589_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='users_user_is_acti_ddda02_idx'),
        ),
    ]
