# Generated by Django 4.2.7 on 2025-05-27 05:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CounterfactualExplanation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(help_text='Description of the hypothetical scenario', max_length=255)),
                ('original_score', models.FloatField(help_text='Original risk score before changes')),
                ('projected_score', models.FloatField(help_text='Projected risk score after changes')),
                ('probability_change', models.FloatField(help_text='Change in default probability')),
                ('required_changes', models.JSONField(help_text='What factors would need to change to achieve this scenario')),
                ('explanation', models.TextField(help_text='Detailed explanation of the scenario and its impact')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this counterfactual was generated')),
            ],
            options={
                'verbose_name': 'Counterfactual Explanation',
                'verbose_name_plural': 'Counterfactual Explanations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_type', models.CharField(choices=[('FICO', 'FICO Score'), ('VANTAGE', 'VantageScore'), ('INTERNAL', 'Internal Score')], max_length=10)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(850)])),
                ('report_date', models.DateField()),
                ('provider', models.CharField(max_length=100)),
                ('factors', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('APPROVE', 'Approve'), ('DECLINE', 'Decline'), ('REFER', 'Refer for Manual Review'), ('CONDITIONAL', 'Conditional Approval')], max_length=15)),
                ('decision_date', models.DateTimeField(auto_now_add=True)),
                ('amount_approved', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('interest_rate', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('term_months', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('conditions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_version', models.CharField(max_length=50)),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.JSONField()),
                ('confidence', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('explanation', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('risk_rating', models.CharField(blank=True, max_length=20)),
                ('probability_of_default', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('expected_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('review_notes', models.TextField(blank=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessment', to='applications.creditapplication')),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='RiskFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor_name', models.CharField(max_length=100)),
                ('factor_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_factors', to='risk.riskassessment')),
            ],
        ),
        migrations.CreateModel(
            name='RiskExplanation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(help_text='Natural language summary of the risk assessment')),
                ('key_factors', models.JSONField(help_text='JSON structure of important risk factors and their impact')),
                ('visualizations', models.JSONField(default=dict, help_text='Configuration data for risk visualization charts')),
                ('generated_at', models.DateTimeField(auto_now_add=True, help_text='When this explanation was generated')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_explanation', to='applications.creditapplication')),
            ],
            options={
                'verbose_name': 'Risk Explanation',
                'verbose_name_plural': 'Risk Explanations',
                'ordering': ['-generated_at'],
            },
        ),
    ]
